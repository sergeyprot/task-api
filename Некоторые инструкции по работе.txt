Тестирование API:

Список задач: Откройте браузер и перейдите по адресу http://localhost:8000/tasks.  Вы должны увидеть пустой JSON-массив ([]), если задач еще нет.
Создание задачи: Используйте curl или Postman (или Advanced REST Client для Chrome) для отправки POST-запроса на http://localhost:8000/tasks с JSON-данными. Пример с curl:
Окно bash

curl -X POST -H "Content-Type: application/json" -d '{"title": "Grocery Shopping", "description": "Buy milk, eggs, and bread", "status": "pending"}' http://localhost:8000/tasks
Просмотр одной задачи:  После создания задачи получите ее ID из ответа и выполните GET-запрос на http://localhost:8000/tasks/{id}.  Например, если ID задачи 1:


В окне bash

curl http://localhost:8000/tasks/1
Обновление задачи:


Через окно bash

curl -X PUT -H "Content-Type: application/json" -d '{"title": "Updated Task", "description": "Updated Description", "status": "completed"}' http://localhost:8000/tasks/1

Т.е. отправляется PUT метод

Удаление задачи:
В окне bash
curl -X DELETE http://localhost:8000/tasks/1


Некоторые замечания:

Аутентификация и авторизация для защиты API.
Логирование.
Убедитесь, что у вас включено расширение SQLite3 для PHP. В файле php.ini раскомментируйте строку extension=sqlite3.

Этот подробный гайд позволит вам установить Git на Windows, создать проект PHP API, Postman — мощный инструмент для создания и отправки HTTP-запросов. Его можно скачать отсюда: https://www.postman.com/downloads/


Установка и запуск Postman: Откройте Postman.

Создание нового запроса:  Нажмите кнопку "+", чтобы создать новый запрос. 
Выбор метода: В выпадающем списке слева выберите HTTP-метод (GET, POST, PUT, DELETE).

Ввод URL: Введите URL запроса в поле рядом с выпадающим списком метода.

Настройка заголовков (Headers): Обычно нужно установить заголовок Content-Type для POST и PUT запросов, чтобы сервер знал, как интерпретировать данные, которые вы отправляете.


Перейдите на вкладку "Headers".
В поле "Key" введите Content-Type.
В поле "Value" введите application/json.
Ввод тела запроса (Body):  Для POST и PUT запросов вам нужно отправить данные в теле запроса.


Перейдите на вкладку "Body".
Выберите "raw" и в выпадающем списке рядом выберите "JSON".
Введите JSON-данные, которые вы хотите отправить.
Отправка запроса: Нажмите кнопку "Send".
Примеры запросов Postman:


Создание новой задачи (POST /tasks):


Method: POST
URL: http://localhost:8000/tasks
Headers: Content-Type: application/json
Body:

json
Копировать
{
  "title": "Купить продукты",
  "description": "Сходить в магазин и купить молоко, хлеб и яйца",
  "status": "В процессе"
}

Нажмите "Send".  API должен вернуть JSON-представление новой созданной задачи, включая ее ID, а также HTTP-код 201.
Обновление существующей задачи (PUT /tasks/{id}):


Предположим, у вас есть задача с id = 1.
Method: PUT
URL: http://localhost:8000/tasks/1
Headers: Content-Type: application/json
Body:

json
Копировать
{
  "title": "Купить продукты",
  "description": "Сходить в магазин и купить молоко, хлеб и яйца",
  "status": "Завершено"
}

Нажмите "Send".  API должен вернуть обновленное JSON-представление задачи с id = 1.
Удаление задачи (DELETE /tasks/{id}):


Предположим, у вас есть задача с id = 1.
Method: DELETE
URL: http://localhost:8000/tasks/1
Headers: (Пусто)
Body: (Пусто)
Нажмите "Send".  API должен вернуть либо успешный HTTP-код (например, 204 No Content), либо JSON-сообщение об успехе.

